From 789a37f14405e2d1a05a76c9fb4ed2d49d4580d5 Mon Sep 17 00:00:00 2001
From: guoyiyuan <yguoaz@gmail.com>
Date: Wed, 13 Jul 2022 20:55:51 +0800
Subject: [PATCH] Prevent potential buffer overflow for large value of
 php_cli_server_workers_max

Fixes #8989.
Closes #9000.
---
 NEWS                      |  4 ++++
 sapi/cli/php_cli_server.c | 10 +++-------
 2 files changed, 7 insertions(+), 7 deletions(-)

Index: php8.1-8.1.2/NEWS
===================================================================
--- php8.1-8.1.2.orig/NEWS
+++ php8.1-8.1.2/NEWS
@@ -2,6 +2,10 @@ PHP
 |||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||
 20 Jan 2022, PHP 8.1.2
 
+- CLI:
+  . Fixed potential overflow for the builtin server via the PHP_CLI_SERVER_WORKERS
+    environment variable. (yiyuaner)
+
 - Core:
   . Fixed bug #81216 (Nullsafe operator leaks dynamic property name). (Dmitry)
   . Fixed bug #81684 (Using null coalesce assignment with $GLOBALS["x"] produces
Index: php8.1-8.1.2/sapi/cli/php_cli_server.c
===================================================================
--- php8.1-8.1.2.orig/sapi/cli/php_cli_server.c
+++ php8.1-8.1.2/sapi/cli/php_cli_server.c
@@ -2296,7 +2296,7 @@ static void php_cli_server_dtor(php_cli_
 					  !WIFSIGNALED(php_cli_server_worker_status));
 		}
 
-		free(php_cli_server_workers);
+		pefree(php_cli_server_workers, 1);
 	}
 #endif
 } /* }}} */
@@ -2382,12 +2382,8 @@ static void php_cli_server_startup_worke
 	if (php_cli_server_workers_max > 1) {
 		zend_long php_cli_server_worker;
 
-		php_cli_server_workers = calloc(
-			php_cli_server_workers_max, sizeof(pid_t));
-		if (!php_cli_server_workers) {
-			php_cli_server_workers_max = 1;
-			return;
-		}
+		php_cli_server_workers = pecalloc(
+			php_cli_server_workers_max, sizeof(pid_t), 1);
 
 		php_cli_server_master = getpid();
 
